// file: AgentPro_ProductionOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package agentPro.onto;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: AgentPro_ProductionOntology.java
 * @author ontology bean generator
 * @version 2019/04/24, 14:43:54
 */
public class AgentPro_ProductionOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "agentPro_Production";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new AgentPro_ProductionOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String _SENDCFP_HASCFP="hasCFP";
    public static final String _SENDCFP="_SendCFP";
    public static final String _SENDREQUEST_BUFFER_HASREQUEST_BUFFER="hasRequest_Buffer";
    public static final String _SENDREQUEST_BUFFER="_SendRequest_Buffer";
    public static final String _SENDPROPOSAL_HASPROPOSAL="hasProposal";
    public static final String _SENDPROPOSAL="_SendProposal";
    public static final String _INCOMING_DISTURBANCE_HASDISTURBANCE="hasDisturbance";
    public static final String _INCOMING_DISTURBANCE="_Incoming_Disturbance";
    public static final String _SENDREQUEST_DATABASEENTRY_HASREQUEST_DATABASEENTRY="hasRequest_DatabaseEntry";
    public static final String _SENDREQUEST_DATABASEENTRY="_SendRequest_DatabaseEntry";
    public static final String _SENDACCEPT_PROPOSAL_HASACCEPT_PROPOSAL="hasAccept_Proposal";
    public static final String _SENDACCEPT_PROPOSAL="_SendAccept_Proposal";
    public static final String _SENDINFORM_SCHEDULED_HASINFORM_SCHEDULED="hasInform_Scheduled";
    public static final String _SENDINFORM_SCHEDULED="_SendInform_Scheduled";
    public static final String _SENDINFORM_ARRIVALANDDEPARTURE_HASINFORM_DEPARTURE="hasInform_Departure";
    public static final String _SENDINFORM_ARRIVALANDDEPARTURE="_SendInform_ArrivalAndDeparture";
    public static final String _INCOMING_ORDER_HASORDER="hasOrder";
    public static final String _INCOMING_ORDER="_Incoming_Order";
    public static final String _SENDINFORM_BUFFER_HASINFORM_BUFFER="hasInform_Buffer";
    public static final String _SENDINFORM_BUFFER="_SendInform_Buffer";
    public static final String _SENDCANCELLATION_HASCANCELLATION="hasCancellation";
    public static final String _SENDCANCELLATION="_SendCancellation";
    public static final String _SENDREJECT_PROPOSAL_HASREJECT_PROPOSAL="hasReject_Proposal";
    public static final String _SENDREJECT_PROPOSAL="_SendReject_Proposal";
    public static final String ALLOCATEDWORKINGSTEP_HASRESOURCE="hasResource";
    public static final String ALLOCATEDWORKINGSTEP_ISSTARTED="isStarted";
    public static final String ALLOCATEDWORKINGSTEP_HASTIMESLOT="hasTimeslot";
    public static final String ALLOCATEDWORKINGSTEP_ISERRORSTEP="isErrorStep";
    public static final String ALLOCATEDWORKINGSTEP_ID_STRING="ID_String";
    public static final String ALLOCATEDWORKINGSTEP_STARTDATE="startdate";
    public static final String ALLOCATEDWORKINGSTEP_ENDDATE="enddate";
    public static final String ALLOCATEDWORKINGSTEP_ISFINISHED="isFinished";
    public static final String ALLOCATEDWORKINGSTEP_HASOPERATION="hasOperation";
    public static final String ALLOCATEDWORKINGSTEP="AllocatedWorkingStep";
    public static final String MACHINE_ERROR_EXPECTED_DATE_OF_REPAIR_START="expected_date_of_repair_Start";
    public static final String MACHINE_ERROR_ERROR_TYPE="error_type";
    public static final String MACHINE_ERROR_EXPECTED_DURATION_OF_REPAIR="expected_Duration_Of_Repair";
    public static final String MACHINE_ERROR="Machine_Error";
    public static final String WORKPIECE_ERROR_EXPECTED_DATE_OF_REPAIR_START="expected_date_of_repair_Start";
    public static final String WORKPIECE_ERROR_EXPECTED_DURATION_OF_REPAIR="expected_Duration_Of_Repair";
    public static final String WORKPIECE_ERROR="Workpiece_Error";
    public static final String REQUEST_BUFFER_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String REQUEST_BUFFER="Request_Buffer";
    public static final String DISTURBANCE_LOCALIZATIONDELTA="localizationDelta";
    public static final String DISTURBANCE_PROCESSDELTA="processDelta";
    public static final String DISTURBANCE_DETECTEDBY="detectedBy";
    public static final String DISTURBANCE_TIMEDELTA="timeDelta";
    public static final String DISTURBANCE_ID_WORKPIECE="id_workpiece";
    public static final String DISTURBANCE_OCCURESAT="occuresAt";
    public static final String DISTURBANCE_ERROR_OCCURANCE_TIME="error_occurance_time";
    public static final String DISTURBANCE_HASDISTURBANCETYPE="hasDisturbanceType";
    public static final String DISTURBANCE="Disturbance";
    public static final String SETUP_STATE_ID_STRING="ID_String";
    public static final String SETUP_STATE="Setup_state";
    public static final String CRANE_RAIL="Crane_Rail";
    public static final String PRODUCT_PART_ISNEEDEDFOR="isNeededFor";
    public static final String PRODUCT_PART_HASLOCATION="hasLocation";
    public static final String PRODUCT_PART="Product_Part";
    public static final String LOCATION_COORDY="coordY";
    public static final String LOCATION_COORDX="coordX";
    public static final String LOCATION="Location";
    public static final String DISTURBANCETYPE="DisturbanceType";
    public static final String CAPABILITY_ENABLES="enables";
    public static final String CAPABILITY_NAME="name";
    public static final String CAPABILITY_ID_NUMBER="iD_Number";
    public static final String CAPABILITY="Capability";
    public static final String ACCEPT_PROPOSAL_HASPROPOSAL="hasProposal";
    public static final String ACCEPT_PROPOSAL_ID_STRING="ID_String";
    public static final String ACCEPT_PROPOSAL_ID_NUMBER="iD_Number";
    public static final String ACCEPT_PROPOSAL="Accept_Proposal";
    public static final String INFORM_ARRIVALANDDEPARTURE_ARRIVALTIME="ArrivalTime";
    public static final String INFORM_ARRIVALANDDEPARTURE_AVG_PICKUPTIME="avg_PickupTime";
    public static final String INFORM_ARRIVALANDDEPARTURE_ID_STRING="ID_String";
    public static final String INFORM_ARRIVALANDDEPARTURE_DEPARTURETIME="DepartureTime";
    public static final String INFORM_ARRIVALANDDEPARTURE="Inform_ArrivalAndDeparture";
    public static final String PERSON_NAME="name";
    public static final String PERSON_ID_NUMBER="iD_Number";
    public static final String PERSON="Person";
    public static final String WORKPIECE_BECOMES="becomes";
    public static final String WORKPIECE_ID_STRING="ID_String";
    public static final String WORKPIECE_HASLOCATION="hasLocation";
    public static final String WORKPIECE="Workpiece";
    public static final String REJECT_PROPOSAL_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String REJECT_PROPOSAL_ID_NUMBER="iD_Number";
    public static final String REJECT_PROPOSAL="Reject_Proposal";
    public static final String SHARED_RESOURCE="Shared_Resource";
    public static final String WORKER="Worker";
    public static final String TOPIC_NAME="name";
    public static final String TOPIC_ID_NUMBER="iD_Number";
    public static final String TOPIC="Topic";
    public static final String NEW_PLAN_ARRIVED="New_Plan_Arrived";
    public static final String OPERATION_AVG_PICKUPTIME="avg_PickupTime";
    public static final String TRANSPORT_OPERATION_HASDETAILEDOPERATIONDESCRIPTION="hasDetailedOperationDescription";
    public static final String TRANSPORT_OPERATION="Transport_Operation";
    public static final String ORDERPOSITION_SEQUENCE_NUMBER="sequence_Number";
    public static final String ORDERPOSITION_QUANTITY="quantity";
    public static final String ORDERPOSITION_STARTDATE="startDate";
    public static final String ORDERPOSITION_CONTAINSPRODUCT="containsProduct";
    public static final String ORDERPOSITION_ENDDATE_STRING="endDate_String";
    public static final String ORDERPOSITION_DUEDATE="dueDate";
    public static final String ORDERPOSITION_RELEASEDATE="releaseDate";
    public static final String ORDERPOSITION_HASTARGETWAREHOUSE="hasTargetWarehouse";
    public static final String ORDERPOSITION="OrderPosition";
    public static final String WORKPLAN_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String WORKPLAN="WorkPlan";
    public static final String CRANE_REQUIRESSHAREDRESOURCE="requiresSharedResource";
    public static final String CRANE="Crane";
    public static final String ORDER_CONSISTSOFORDERPOSITIONS="consistsOfOrderPositions";
    public static final String ORDER_ID_NUMBER="iD_Number";
    public static final String ORDER="Order";
    public static final String TRANSPORTRESOURCE_AVG_PICKUPTIME="avg_PickupTime";
    public static final String TRANSPORTRESOURCE_AVG_SPEED="avg_Speed";
    public static final String TRANSPORTRESOURCE="TransportResource";
    public static final String PRODUCT_HASPRODUCTIONPLAN="hasProductionPlan";
    public static final String PRODUCT_ISDEFINEDBYPRODUCTIONPLAN="isDefinedByProductionPlan";
    public static final String PRODUCT_NAME="name";
    public static final String PRODUCT_ID_NUMBER="iD_Number";
    public static final String PRODUCT="Product";
    public static final String TIMEDPLAN="TimedPlan";
    public static final String OPERATION_STARTSTATE="startState";
    public static final String OPERATION_STARTSTATENEEDED="startStateNeeded";
    public static final String OPERATION_ISENABLEDBY="isEnabledBy";
    public static final String OPERATION_BUFFER_AFTER_OPERATION="buffer_after_operation";
    public static final String OPERATION_SET_UP_TIME="set_up_time";
    public static final String OPERATION_AVG_DURATION="avg_Duration";
    public static final String OPERATION_BUFFER_BEFORE_OPERATION="buffer_before_operation";
    public static final String OPERATION_TYPE="type";
    public static final String OPERATION_NAME="name";
    public static final String OPERATION_APPLIEDON="appliedOn";
    public static final String OPERATION_ENDSTATE="endState";
    public static final String OPERATION="Operation";
    public static final String DELAY_EXPECTED_DATE_OF_REPAIR_START="expected_date_of_repair_Start";
    public static final String DELAY_EXPECTED_DURATION_OF_REPAIR="expected_Duration_Of_Repair";
    public static final String DELAY="Delay";
    public static final String EVENT_TOPIC="topic";
    public static final String EVENT="Event";
    public static final String STATE="State";
    public static final String INFORM_SCHEDULED_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String INFORM_SCHEDULED="Inform_Scheduled";
    public static final String RESOURCE_STARTSTATE="startState";
    public static final String RESOURCE_HASCAPABILITY="hasCapability";
    public static final String RESOURCE_TYPE="type";
    public static final String RESOURCE_DETAILED_TYPE="detailed_Type";
    public static final String RESOURCE_NAME="name";
    public static final String RESOURCE_CURRENTSTATE="currentState";
    public static final String RESOURCE_HASDISTURBANCE="hasDisturbance";
    public static final String RESOURCE_HASLOCATION="hasLocation";
    public static final String RESOURCE_ID_NUMBER="iD_Number";
    public static final String RESOURCE="Resource";
    public static final String CFP_QUANTITY="quantity";
    public static final String CFP_HASTIMESLOT="hasTimeslot";
    public static final String CFP_ID_STRING="ID_String";
    public static final String CFP_HASOPERATION="hasOperation";
    public static final String CFP="CFP";
    public static final String WAREHOUSE_RESOURCE="Warehouse_Resource";
    public static final String MACHINE_TYPE_A="Machine_Type_A";
    public static final String CANCELLATION_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String CANCELLATION="Cancellation";
    public static final String PRODUCTIONRESOURCE="ProductionResource";
    public static final String MESSAGE_HASSENDER="hasSender";
    public static final String MESSAGE="Message";
    public static final String OPERATOR_TRANSPORT="Operator_Transport";
    public static final String LOCALIZATIONPLAN="LocalizationPlan";
    public static final String TIMESLOT_STARTDATE="startDate";
    public static final String TIMESLOT_ENDDATE="endDate";
    public static final String TIMESLOT_LENGTH="length";
    public static final String TIMESLOT="Timeslot";
    public static final String OPERATION_COMPLETE="Operation_Complete";
    public static final String WRONG_LOCATION="Wrong_Location";
    public static final String ORDEREDOPERATION_WITHOPERATIONINSTEP="withOperationInStep";
    public static final String ORDEREDOPERATION_SEQUENCE_NUMBER="sequence_Number";
    public static final String ORDEREDOPERATION_LASTOPERATION="lastOperation";
    public static final String ORDEREDOPERATION_HASFOLLOWUPOPERATION="hasFollowUpOperation";
    public static final String ORDEREDOPERATION_FIRSTOPERATION="firstOperation";
    public static final String ORDEREDOPERATION_HASOPERATION="hasOperation";
    public static final String ORDEREDOPERATION="OrderedOperation";
    public static final String REQUEST_DATABASEENTRY_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String REQUEST_DATABASEENTRY="Request_DatabaseEntry";
    public static final String LOCALIZATIONCHECKPOINT_COORDDEVIATIONX="coordDeviationX";
    public static final String LOCALIZATIONCHECKPOINT_TIME="time";
    public static final String LOCALIZATIONCHECKPOINT_TIMEDEVIATION="timeDeviation";
    public static final String LOCALIZATIONCHECKPOINT_HASLOCATION="hasLocation";
    public static final String LOCALIZATIONCHECKPOINT_COORDDEVIATIONY="coordDeviationY";
    public static final String LOCALIZATIONCHECKPOINT="LocalizationCheckpoint";
    public static final String PRODUCTIONPLAN_DEFINESPRODUCT="definesProduct";
    public static final String PRODUCTIONPLAN_CONSISTSOFORDEREDOPERATIONS="consistsOfOrderedOperations";
    public static final String PRODUCTIONPLAN="ProductionPlan";
    public static final String PROPOSAL_PRICE="price";
    public static final String PROPOSAL_ID_STRING="ID_String";
    public static final String PROPOSAL_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String PROPOSAL_ID_NUMBER="iD_Number";
    public static final String PROPOSAL="Proposal";
    public static final String INFORM_BUFFER_CONSISTSOFALLOCATEDWORKINGSTEPS="consistsOfAllocatedWorkingSteps";
    public static final String INFORM_BUFFER="Inform_Buffer";
    public static final String DETAILEDOPERATIONDESCRIPTION_HASREQUEST_POINTS="hasRequest_Points";
    public static final String DETAILEDOPERATIONDESCRIPTION="DetailedOperationDescription";
    public static final String PRODUCTION_OPERATION="Production_Operation";
    public static final String REQUEST_POINT_TIME="time";
    public static final String REQUEST_POINT_TYPE="type";
    public static final String REQUEST_POINT_COORDX="coordX";
    public static final String REQUEST_POINT="Request_Point";

  /**
   * Constructor
  */
  private AgentPro_ProductionOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema request_PointSchema = new ConceptSchema(REQUEST_POINT);
    add(request_PointSchema, agentPro.onto.Request_Point.class);
    ConceptSchema production_OperationSchema = new ConceptSchema(PRODUCTION_OPERATION);
    add(production_OperationSchema, agentPro.onto.Production_Operation.class);
    ConceptSchema detailedOperationDescriptionSchema = new ConceptSchema(DETAILEDOPERATIONDESCRIPTION);
    add(detailedOperationDescriptionSchema, agentPro.onto.DetailedOperationDescription.class);
    ConceptSchema inform_BufferSchema = new ConceptSchema(INFORM_BUFFER);
    add(inform_BufferSchema, agentPro.onto.Inform_Buffer.class);
    ConceptSchema proposalSchema = new ConceptSchema(PROPOSAL);
    add(proposalSchema, agentPro.onto.Proposal.class);
    ConceptSchema productionPlanSchema = new ConceptSchema(PRODUCTIONPLAN);
    add(productionPlanSchema, agentPro.onto.ProductionPlan.class);
    ConceptSchema localizationCheckpointSchema = new ConceptSchema(LOCALIZATIONCHECKPOINT);
    add(localizationCheckpointSchema, agentPro.onto.LocalizationCheckpoint.class);
    ConceptSchema request_DatabaseEntrySchema = new ConceptSchema(REQUEST_DATABASEENTRY);
    add(request_DatabaseEntrySchema, agentPro.onto.Request_DatabaseEntry.class);
    ConceptSchema orderedOperationSchema = new ConceptSchema(ORDEREDOPERATION);
    add(orderedOperationSchema, agentPro.onto.OrderedOperation.class);
    ConceptSchema wrong_LocationSchema = new ConceptSchema(WRONG_LOCATION);
    add(wrong_LocationSchema, agentPro.onto.Wrong_Location.class);
    ConceptSchema operation_CompleteSchema = new ConceptSchema(OPERATION_COMPLETE);
    add(operation_CompleteSchema, agentPro.onto.Operation_Complete.class);
    ConceptSchema timeslotSchema = new ConceptSchema(TIMESLOT);
    add(timeslotSchema, agentPro.onto.Timeslot.class);
    ConceptSchema localizationPlanSchema = new ConceptSchema(LOCALIZATIONPLAN);
    add(localizationPlanSchema, agentPro.onto.LocalizationPlan.class);
    ConceptSchema operator_TransportSchema = new ConceptSchema(OPERATOR_TRANSPORT);
    add(operator_TransportSchema, agentPro.onto.Operator_Transport.class);
    ConceptSchema messageSchema = new ConceptSchema(MESSAGE);
    add(messageSchema, agentPro.onto.Message.class);
    ConceptSchema productionResourceSchema = new ConceptSchema(PRODUCTIONRESOURCE);
    add(productionResourceSchema, agentPro.onto.ProductionResource.class);
    ConceptSchema cancellationSchema = new ConceptSchema(CANCELLATION);
    add(cancellationSchema, agentPro.onto.Cancellation.class);
    ConceptSchema machine_Type_ASchema = new ConceptSchema(MACHINE_TYPE_A);
    add(machine_Type_ASchema, agentPro.onto.Machine_Type_A.class);
    ConceptSchema warehouse_ResourceSchema = new ConceptSchema(WAREHOUSE_RESOURCE);
    add(warehouse_ResourceSchema, agentPro.onto.Warehouse_Resource.class);
    ConceptSchema cfpSchema = new ConceptSchema(CFP);
    add(cfpSchema, agentPro.onto.CFP.class);
    ConceptSchema resourceSchema = new ConceptSchema(RESOURCE);
    add(resourceSchema, agentPro.onto.Resource.class);
    ConceptSchema inform_ScheduledSchema = new ConceptSchema(INFORM_SCHEDULED);
    add(inform_ScheduledSchema, agentPro.onto.Inform_Scheduled.class);
    ConceptSchema stateSchema = new ConceptSchema(STATE);
    add(stateSchema, agentPro.onto.State.class);
    ConceptSchema eventSchema = new ConceptSchema(EVENT);
    add(eventSchema, agentPro.onto.Event.class);
    ConceptSchema delaySchema = new ConceptSchema(DELAY);
    add(delaySchema, agentPro.onto.Delay.class);
    ConceptSchema operationSchema = new ConceptSchema(OPERATION);
    add(operationSchema, agentPro.onto.Operation.class);
    ConceptSchema timedPlanSchema = new ConceptSchema(TIMEDPLAN);
    add(timedPlanSchema, agentPro.onto.TimedPlan.class);
    ConceptSchema productSchema = new ConceptSchema(PRODUCT);
    add(productSchema, agentPro.onto.Product.class);
    ConceptSchema transportResourceSchema = new ConceptSchema(TRANSPORTRESOURCE);
    add(transportResourceSchema, agentPro.onto.TransportResource.class);
    ConceptSchema orderSchema = new ConceptSchema(ORDER);
    add(orderSchema, agentPro.onto.Order.class);
    ConceptSchema craneSchema = new ConceptSchema(CRANE);
    add(craneSchema, agentPro.onto.Crane.class);
    ConceptSchema workPlanSchema = new ConceptSchema(WORKPLAN);
    add(workPlanSchema, agentPro.onto.WorkPlan.class);
    ConceptSchema orderPositionSchema = new ConceptSchema(ORDERPOSITION);
    add(orderPositionSchema, agentPro.onto.OrderPosition.class);
    ConceptSchema transport_OperationSchema = new ConceptSchema(TRANSPORT_OPERATION);
    add(transport_OperationSchema, agentPro.onto.Transport_Operation.class);
    ConceptSchema new_Plan_ArrivedSchema = new ConceptSchema(NEW_PLAN_ARRIVED);
    add(new_Plan_ArrivedSchema, agentPro.onto.New_Plan_Arrived.class);
    ConceptSchema topicSchema = new ConceptSchema(TOPIC);
    add(topicSchema, agentPro.onto.Topic.class);
    ConceptSchema workerSchema = new ConceptSchema(WORKER);
    add(workerSchema, agentPro.onto.Worker.class);
    ConceptSchema shared_ResourceSchema = new ConceptSchema(SHARED_RESOURCE);
    add(shared_ResourceSchema, agentPro.onto.Shared_Resource.class);
    ConceptSchema reject_ProposalSchema = new ConceptSchema(REJECT_PROPOSAL);
    add(reject_ProposalSchema, agentPro.onto.Reject_Proposal.class);
    ConceptSchema workpieceSchema = new ConceptSchema(WORKPIECE);
    add(workpieceSchema, agentPro.onto.Workpiece.class);
    ConceptSchema personSchema = new ConceptSchema(PERSON);
    add(personSchema, agentPro.onto.Person.class);
    ConceptSchema inform_ArrivalAndDepartureSchema = new ConceptSchema(INFORM_ARRIVALANDDEPARTURE);
    add(inform_ArrivalAndDepartureSchema, agentPro.onto.Inform_ArrivalAndDeparture.class);
    ConceptSchema accept_ProposalSchema = new ConceptSchema(ACCEPT_PROPOSAL);
    add(accept_ProposalSchema, agentPro.onto.Accept_Proposal.class);
    ConceptSchema capabilitySchema = new ConceptSchema(CAPABILITY);
    add(capabilitySchema, agentPro.onto.Capability.class);
    ConceptSchema disturbanceTypeSchema = new ConceptSchema(DISTURBANCETYPE);
    add(disturbanceTypeSchema, agentPro.onto.DisturbanceType.class);
    ConceptSchema locationSchema = new ConceptSchema(LOCATION);
    add(locationSchema, agentPro.onto.Location.class);
    ConceptSchema product_PartSchema = new ConceptSchema(PRODUCT_PART);
    add(product_PartSchema, agentPro.onto.Product_Part.class);
    ConceptSchema crane_RailSchema = new ConceptSchema(CRANE_RAIL);
    add(crane_RailSchema, agentPro.onto.Crane_Rail.class);
    ConceptSchema setup_stateSchema = new ConceptSchema(SETUP_STATE);
    add(setup_stateSchema, agentPro.onto.Setup_state.class);
    ConceptSchema disturbanceSchema = new ConceptSchema(DISTURBANCE);
    add(disturbanceSchema, agentPro.onto.Disturbance.class);
    ConceptSchema request_BufferSchema = new ConceptSchema(REQUEST_BUFFER);
    add(request_BufferSchema, agentPro.onto.Request_Buffer.class);
    ConceptSchema workpiece_ErrorSchema = new ConceptSchema(WORKPIECE_ERROR);
    add(workpiece_ErrorSchema, agentPro.onto.Workpiece_Error.class);
    ConceptSchema machine_ErrorSchema = new ConceptSchema(MACHINE_ERROR);
    add(machine_ErrorSchema, agentPro.onto.Machine_Error.class);
    ConceptSchema allocatedWorkingStepSchema = new ConceptSchema(ALLOCATEDWORKINGSTEP);
    add(allocatedWorkingStepSchema, agentPro.onto.AllocatedWorkingStep.class);

    // adding AgentAction(s)
    AgentActionSchema _SendReject_ProposalSchema = new AgentActionSchema(_SENDREJECT_PROPOSAL);
    add(_SendReject_ProposalSchema, agentPro.onto._SendReject_Proposal.class);
    AgentActionSchema _SendCancellationSchema = new AgentActionSchema(_SENDCANCELLATION);
    add(_SendCancellationSchema, agentPro.onto._SendCancellation.class);
    AgentActionSchema _SendInform_BufferSchema = new AgentActionSchema(_SENDINFORM_BUFFER);
    add(_SendInform_BufferSchema, agentPro.onto._SendInform_Buffer.class);
    AgentActionSchema _Incoming_OrderSchema = new AgentActionSchema(_INCOMING_ORDER);
    add(_Incoming_OrderSchema, agentPro.onto._Incoming_Order.class);
    AgentActionSchema _SendInform_ArrivalAndDepartureSchema = new AgentActionSchema(_SENDINFORM_ARRIVALANDDEPARTURE);
    add(_SendInform_ArrivalAndDepartureSchema, agentPro.onto._SendInform_ArrivalAndDeparture.class);
    AgentActionSchema _SendInform_ScheduledSchema = new AgentActionSchema(_SENDINFORM_SCHEDULED);
    add(_SendInform_ScheduledSchema, agentPro.onto._SendInform_Scheduled.class);
    AgentActionSchema _SendAccept_ProposalSchema = new AgentActionSchema(_SENDACCEPT_PROPOSAL);
    add(_SendAccept_ProposalSchema, agentPro.onto._SendAccept_Proposal.class);
    AgentActionSchema _SendRequest_DatabaseEntrySchema = new AgentActionSchema(_SENDREQUEST_DATABASEENTRY);
    add(_SendRequest_DatabaseEntrySchema, agentPro.onto._SendRequest_DatabaseEntry.class);
    AgentActionSchema _Incoming_DisturbanceSchema = new AgentActionSchema(_INCOMING_DISTURBANCE);
    add(_Incoming_DisturbanceSchema, agentPro.onto._Incoming_Disturbance.class);
    AgentActionSchema _SendProposalSchema = new AgentActionSchema(_SENDPROPOSAL);
    add(_SendProposalSchema, agentPro.onto._SendProposal.class);
    AgentActionSchema _SendRequest_BufferSchema = new AgentActionSchema(_SENDREQUEST_BUFFER);
    add(_SendRequest_BufferSchema, agentPro.onto._SendRequest_Buffer.class);
    AgentActionSchema _SendCFPSchema = new AgentActionSchema(_SENDCFP);
    add(_SendCFPSchema, agentPro.onto._SendCFP.class);

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    request_PointSchema.add(REQUEST_POINT_COORDX, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    request_PointSchema.add(REQUEST_POINT_TYPE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    request_PointSchema.add(REQUEST_POINT_TIME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    detailedOperationDescriptionSchema.add(DETAILEDOPERATIONDESCRIPTION_HASREQUEST_POINTS, request_PointSchema, 0, ObjectSchema.UNLIMITED);
    inform_BufferSchema.add(INFORM_BUFFER_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    proposalSchema.add(PROPOSAL_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    proposalSchema.add(PROPOSAL_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    proposalSchema.add(PROPOSAL_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    proposalSchema.add(PROPOSAL_PRICE, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    productionPlanSchema.add(PRODUCTIONPLAN_CONSISTSOFORDEREDOPERATIONS, orderedOperationSchema, 0, ObjectSchema.UNLIMITED);
    productionPlanSchema.add(PRODUCTIONPLAN_DEFINESPRODUCT, productSchema, ObjectSchema.OPTIONAL);
    localizationCheckpointSchema.add(LOCALIZATIONCHECKPOINT_COORDDEVIATIONY, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    localizationCheckpointSchema.add(LOCALIZATIONCHECKPOINT_HASLOCATION, locationSchema, ObjectSchema.OPTIONAL);
    localizationCheckpointSchema.add(LOCALIZATIONCHECKPOINT_TIMEDEVIATION, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    localizationCheckpointSchema.add(LOCALIZATIONCHECKPOINT_TIME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    localizationCheckpointSchema.add(LOCALIZATIONCHECKPOINT_COORDDEVIATIONX, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    request_DatabaseEntrySchema.add(REQUEST_DATABASEENTRY_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    orderedOperationSchema.add(ORDEREDOPERATION_HASOPERATION, operationSchema, ObjectSchema.OPTIONAL);
    orderedOperationSchema.add(ORDEREDOPERATION_FIRSTOPERATION, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    orderedOperationSchema.add(ORDEREDOPERATION_HASFOLLOWUPOPERATION, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    orderedOperationSchema.add(ORDEREDOPERATION_LASTOPERATION, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    orderedOperationSchema.add(ORDEREDOPERATION_SEQUENCE_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    orderedOperationSchema.add(ORDEREDOPERATION_WITHOPERATIONINSTEP, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    timeslotSchema.add(TIMESLOT_LENGTH, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    timeslotSchema.add(TIMESLOT_ENDDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    timeslotSchema.add(TIMESLOT_STARTDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    messageSchema.add(MESSAGE_HASSENDER, (ConceptSchema)getSchema(BasicOntology.AID), ObjectSchema.OPTIONAL);
    cancellationSchema.add(CANCELLATION_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    cfpSchema.add(CFP_HASOPERATION, operationSchema, ObjectSchema.OPTIONAL);
    cfpSchema.add(CFP_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    cfpSchema.add(CFP_HASTIMESLOT, timeslotSchema, ObjectSchema.OPTIONAL);
    cfpSchema.add(CFP_QUANTITY, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_HASLOCATION, locationSchema, ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_HASDISTURBANCE, disturbanceSchema, ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_CURRENTSTATE, stateSchema, ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_DETAILED_TYPE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_TYPE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_HASCAPABILITY, capabilitySchema, ObjectSchema.OPTIONAL);
    resourceSchema.add(RESOURCE_STARTSTATE, stateSchema, ObjectSchema.OPTIONAL);
    inform_ScheduledSchema.add(INFORM_SCHEDULED_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    eventSchema.add(EVENT_TOPIC, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    delaySchema.add(DELAY_EXPECTED_DURATION_OF_REPAIR, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    delaySchema.add(DELAY_EXPECTED_DATE_OF_REPAIR_START, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_ENDSTATE, stateSchema, ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_APPLIEDON, workpieceSchema, ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_TYPE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_BUFFER_BEFORE_OPERATION, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_AVG_DURATION, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_SET_UP_TIME, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_BUFFER_AFTER_OPERATION, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_ISENABLEDBY, capabilitySchema, 0, ObjectSchema.UNLIMITED);
    operationSchema.add(OPERATION_STARTSTATE, stateSchema, ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_STARTSTATENEEDED, stateSchema, ObjectSchema.OPTIONAL);
    productSchema.add(PRODUCT_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    productSchema.add(PRODUCT_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    productSchema.add(PRODUCT_ISDEFINEDBYPRODUCTIONPLAN, productionPlanSchema, ObjectSchema.OPTIONAL);
    productSchema.add(PRODUCT_HASPRODUCTIONPLAN, productionPlanSchema, ObjectSchema.OPTIONAL);
    transportResourceSchema.add(TRANSPORTRESOURCE_AVG_SPEED, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    transportResourceSchema.add(TRANSPORTRESOURCE_AVG_PICKUPTIME, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    orderSchema.add(ORDER_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    orderSchema.add(ORDER_CONSISTSOFORDERPOSITIONS, orderPositionSchema, 0, ObjectSchema.UNLIMITED);
    craneSchema.add(CRANE_REQUIRESSHAREDRESOURCE, new ConceptSchema("Concept"), 0, ObjectSchema.UNLIMITED);
    workPlanSchema.add(WORKPLAN_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    orderPositionSchema.add(ORDERPOSITION_HASTARGETWAREHOUSE, warehouse_ResourceSchema, ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_RELEASEDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_DUEDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_ENDDATE_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_CONTAINSPRODUCT, productSchema, ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_STARTDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_QUANTITY, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    orderPositionSchema.add(ORDERPOSITION_SEQUENCE_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    transport_OperationSchema.add(TRANSPORT_OPERATION_HASDETAILEDOPERATIONDESCRIPTION, detailedOperationDescriptionSchema, ObjectSchema.OPTIONAL);
    operationSchema.add(OPERATION_AVG_PICKUPTIME, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    topicSchema.add(TOPIC_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    topicSchema.add(TOPIC_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    reject_ProposalSchema.add(REJECT_PROPOSAL_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    reject_ProposalSchema.add(REJECT_PROPOSAL_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    workpieceSchema.add(WORKPIECE_HASLOCATION, locationSchema, ObjectSchema.OPTIONAL);
    workpieceSchema.add(WORKPIECE_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    workpieceSchema.add(WORKPIECE_BECOMES, productSchema, ObjectSchema.OPTIONAL);
    personSchema.add(PERSON_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    personSchema.add(PERSON_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    inform_ArrivalAndDepartureSchema.add(INFORM_ARRIVALANDDEPARTURE_DEPARTURETIME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    inform_ArrivalAndDepartureSchema.add(INFORM_ARRIVALANDDEPARTURE_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    inform_ArrivalAndDepartureSchema.add(INFORM_ARRIVALANDDEPARTURE_AVG_PICKUPTIME, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    inform_ArrivalAndDepartureSchema.add(INFORM_ARRIVALANDDEPARTURE_ARRIVALTIME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    accept_ProposalSchema.add(ACCEPT_PROPOSAL_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    accept_ProposalSchema.add(ACCEPT_PROPOSAL_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    accept_ProposalSchema.add(ACCEPT_PROPOSAL_HASPROPOSAL, proposalSchema, 0, ObjectSchema.UNLIMITED);
    capabilitySchema.add(CAPABILITY_ID_NUMBER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    capabilitySchema.add(CAPABILITY_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    capabilitySchema.add(CAPABILITY_ENABLES, operationSchema, 0, ObjectSchema.UNLIMITED);
    locationSchema.add(LOCATION_COORDX, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    locationSchema.add(LOCATION_COORDY, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    product_PartSchema.add(PRODUCT_PART_HASLOCATION, locationSchema, ObjectSchema.OPTIONAL);
    product_PartSchema.add(PRODUCT_PART_ISNEEDEDFOR, new ConceptSchema("Concept"), 0, ObjectSchema.UNLIMITED);
    setup_stateSchema.add(SETUP_STATE_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_HASDISTURBANCETYPE, disturbanceTypeSchema, ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_ERROR_OCCURANCE_TIME, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_OCCURESAT, resourceSchema, ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_ID_WORKPIECE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_TIMEDELTA, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_DETECTEDBY, personSchema, ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_PROCESSDELTA, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    disturbanceSchema.add(DISTURBANCE_LOCALIZATIONDELTA, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    request_BufferSchema.add(REQUEST_BUFFER_CONSISTSOFALLOCATEDWORKINGSTEPS, allocatedWorkingStepSchema, 0, ObjectSchema.UNLIMITED);
    workpiece_ErrorSchema.add(WORKPIECE_ERROR_EXPECTED_DURATION_OF_REPAIR, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    workpiece_ErrorSchema.add(WORKPIECE_ERROR_EXPECTED_DATE_OF_REPAIR_START, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    machine_ErrorSchema.add(MACHINE_ERROR_EXPECTED_DURATION_OF_REPAIR, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    machine_ErrorSchema.add(MACHINE_ERROR_ERROR_TYPE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    machine_ErrorSchema.add(MACHINE_ERROR_EXPECTED_DATE_OF_REPAIR_START, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_HASOPERATION, operationSchema, ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_ISFINISHED, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_ENDDATE, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_STARTDATE, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_ID_STRING, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_ISERRORSTEP, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_HASTIMESLOT, timeslotSchema, ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_ISSTARTED, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    allocatedWorkingStepSchema.add(ALLOCATEDWORKINGSTEP_HASRESOURCE, resourceSchema, ObjectSchema.OPTIONAL);
    _SendReject_ProposalSchema.add(_SENDREJECT_PROPOSAL_HASREJECT_PROPOSAL, reject_ProposalSchema, ObjectSchema.OPTIONAL);
    _SendCancellationSchema.add(_SENDCANCELLATION_HASCANCELLATION, cancellationSchema, ObjectSchema.OPTIONAL);
    _SendInform_BufferSchema.add(_SENDINFORM_BUFFER_HASINFORM_BUFFER, inform_BufferSchema, ObjectSchema.OPTIONAL);
    _Incoming_OrderSchema.add(_INCOMING_ORDER_HASORDER, orderSchema, ObjectSchema.OPTIONAL);
    _SendInform_ArrivalAndDepartureSchema.add(_SENDINFORM_ARRIVALANDDEPARTURE_HASINFORM_DEPARTURE, inform_ArrivalAndDepartureSchema, ObjectSchema.OPTIONAL);
    _SendInform_ScheduledSchema.add(_SENDINFORM_SCHEDULED_HASINFORM_SCHEDULED, inform_ScheduledSchema, ObjectSchema.OPTIONAL);
    _SendAccept_ProposalSchema.add(_SENDACCEPT_PROPOSAL_HASACCEPT_PROPOSAL, accept_ProposalSchema, ObjectSchema.OPTIONAL);
    _SendRequest_DatabaseEntrySchema.add(_SENDREQUEST_DATABASEENTRY_HASREQUEST_DATABASEENTRY, request_DatabaseEntrySchema, ObjectSchema.OPTIONAL);
    _Incoming_DisturbanceSchema.add(_INCOMING_DISTURBANCE_HASDISTURBANCE, disturbanceSchema, ObjectSchema.OPTIONAL);
    _SendProposalSchema.add(_SENDPROPOSAL_HASPROPOSAL, proposalSchema, 0, ObjectSchema.UNLIMITED);
    _SendRequest_BufferSchema.add(_SENDREQUEST_BUFFER_HASREQUEST_BUFFER, request_BufferSchema, ObjectSchema.OPTIONAL);
    _SendCFPSchema.add(_SENDCFP_HASCFP, cfpSchema, 0, ObjectSchema.UNLIMITED);

    // adding name mappings

    // adding inheritance
    production_OperationSchema.addSuperSchema(operationSchema);
    inform_BufferSchema.addSuperSchema(messageSchema);
    proposalSchema.addSuperSchema(messageSchema);
    request_DatabaseEntrySchema.addSuperSchema(messageSchema);
    wrong_LocationSchema.addSuperSchema(disturbanceTypeSchema);
    operation_CompleteSchema.addSuperSchema(eventSchema);
    localizationPlanSchema.addSuperSchema(timedPlanSchema);
    operator_TransportSchema.addSuperSchema(shared_ResourceSchema);
    productionResourceSchema.addSuperSchema(resourceSchema);
    cancellationSchema.addSuperSchema(messageSchema);
    machine_Type_ASchema.addSuperSchema(productionResourceSchema);
    warehouse_ResourceSchema.addSuperSchema(resourceSchema);
    cfpSchema.addSuperSchema(messageSchema);
    inform_ScheduledSchema.addSuperSchema(messageSchema);
    delaySchema.addSuperSchema(disturbanceTypeSchema);
    transportResourceSchema.addSuperSchema(resourceSchema);
    craneSchema.addSuperSchema(transportResourceSchema);
    workPlanSchema.addSuperSchema(timedPlanSchema);
    transport_OperationSchema.addSuperSchema(operationSchema);
    new_Plan_ArrivedSchema.addSuperSchema(eventSchema);
    workerSchema.addSuperSchema(personSchema);
    shared_ResourceSchema.addSuperSchema(resourceSchema);
    reject_ProposalSchema.addSuperSchema(messageSchema);
    inform_ArrivalAndDepartureSchema.addSuperSchema(messageSchema);
    accept_ProposalSchema.addSuperSchema(messageSchema);
    locationSchema.addSuperSchema(stateSchema);
    crane_RailSchema.addSuperSchema(shared_ResourceSchema);
    setup_stateSchema.addSuperSchema(stateSchema);
    disturbanceSchema.addSuperSchema(eventSchema);
    request_BufferSchema.addSuperSchema(messageSchema);
    workpiece_ErrorSchema.addSuperSchema(disturbanceTypeSchema);
    machine_ErrorSchema.addSuperSchema(disturbanceTypeSchema);

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
